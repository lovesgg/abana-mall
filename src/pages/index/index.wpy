<style lang="less">
  page{
    display: flex;
    flex-direction: column;
    background-color: #F8F9F9;
  }
  .navbar{
    flex: none;
    display: flex;
    background: #fff;
  }
  .navbar .item{
    position: relative;
    flex: auto;
    text-align: center;
    line-height: 80rpx;
  }
  .navbar .item.active{
    color: #2d8cf0;
  }
  .navbar .item.active:after{
    content: "";
    display: block;
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 4rpx;
    background: #2d8cf0;
  }

  /*单元行*/
  .row-user {
    display: flex;
    flex-direction: row;
    align-items: center;
    margin: 10 10rpx;
    border-bottom: 1px solid #e8e8e8;
    background-color: #ffffff;
  }

  /*头像*/
  .row-user image {
    width: 100rpx;
    height: 100rpx;
    border-radius: 50rpx;
    margin: 20rpx;
  }

  /*主体*/
  .content-user {
    display: flex;
    flex-direction: column;
    width: 76%;
    padding-left: 20rpx;
  }

  /*昵称与日期*/
  .top-user, .bottom-user {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    width: 100%;
  }

  /*昵称*/
  .nickname-user {
    color: #4d4d4d;
    font-size: 36rpx;
  }

  /*日期*/
  .datetime-user {
    padding: 10rpx;
    font-size: 26rpx;
    color: #b2b2b2;
  }

  /*话语*/
  .sentence-user {
    color: #ccc;
    font-size: 28rpx;
    margin-top: 6rpx;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
</style>
<template>
  <!--导航条-->
  <view class="">
    <view class="row space-b" style="position: fixed;width: 755rpx;background-color: #fff;">
      <view class="center pl-30 pr-30" @tap="turnToSet()">
        <image src="{{iconPath}}set.png" style="width: 50rpx;height: 50rpx;"></image>
      </view>
      <view class="navbar" style="width: 430rpx;">
        <text wx:for="{{navbar}}" data-idx="{{index}}" class="item {{currentTab==index ? 'active' : ''}}"
              wx:key="unique" bindtap="navbarTap">{{item}}
        </text>
      </view>
      <view class="center pl-30 pr-30" @tap="turnToSearch()">
        <image src="{{iconPath}}search.png" style="width: 45rpx;height: 45rpx;"></image>
      </view>
    </view>
  </view>

  <view style="height: 85rpx;"></view>

  <!--首页-->
  <view hidden="{{currentTab!==0}}">
    <repeat for="{{articleList}}" item="item" index="index">
      <article :article.sync="item"></article>
    </repeat>
  </view>

  <!--用户列表-->
  <view hidden="{{currentTab!==1}}">
    <view class="row-user mt-15" wx:for="{{userList}}" wx:key="" @tap="turnToUserInfo('{{item.user_id}}')" data-id="{{item.id}}">
      <!-- 头像 -->
      <image src="{{item.avatar_url}}" />
      <!-- 名称与语句 -->
      <view class="content-user">
        <view class="top-user">
          <view class="nickname-user">{{item.nick_name}}</view>
          <view class="datetime-user">{{item.register_time}}</view>
        </view>
        <view class="bottom-user">
          <view class="sentence-user">{{item.gender}}</view>
        </view>
      </view>
    </view>
  </view>

  <view wx:if="{{updateIcon == true}}" class="center pd-50">
    <image src="{{iconPath}}update.png" style="width: 50rpx;height: 50rpx;"></image>
  </view>

  <image wx:if="{{isShowPublish}}" @tap.stop="turnPublish('index')" style="position: fixed;bottom: 60rpx;right: 30rpx;width: 80rpx;height: 80rpx;" src="{{iconPath}}publish.png"></image>

</template>

<script>
  import wepy from 'wepy';
  import pagePath from '../../resource/common/paths';
  import common from '../../resource/common/common';
  import methods from '../../resource/common/methods';
  import urls from '../../resource/common/urls';
  import api from '../../resource/api/api-logined';
  import request from '../../resource/api/request';
  import article from '../../components/article-list';


  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: 'Abana',
      enablePullDownRefresh: true
    };
    components = {
      article: article
    };

    mixins = [];

    data = {
      updateIcon: false,
      userInfo: {},
      navbar: ['首页', '友人'],
      currentTab: 0,
      iconPath: common.icon_path,
      page: 1,
      userPage: 1,
      articleList: [],
      userList: [],
      showDataList: [],
      isShowPublish: true
    };

    computed = {};

    methods = {
      navbarTap(e) {
        var tab = e.currentTarget.dataset.idx;
        this.currentTab = tab;

        //数据为空时才会请求
        if (tab === 0) {
          this.isShowPublish = true;
          if (this.articleList.length == 0) {
            this.requestData();
          }
        } else if (tab === 1) {
          this.isShowPublish = false;
          if (this.userList.length == 0) {
            this.requestUser();
          }
        }
        this.updateIcon = false;
        this.$apply();
      },
      turnToSearch() {
        wepy.navigateTo({
          url: pagePath.PAGE_INDEX_SEARCH
        });
      },
      turnToSet() {
        wepy.navigateTo({
          url: pagePath.PAGE_INDEX_SET
        });
      },
      turnPublish(type) {
        methods.getStorage(common.TOKEN, function(res) {
          if (res.nick_name === '') {
            //需要用户授权个人信息
            wepy.navigateTo({
              url: pagePath.PAGE_USER_LOGIN
            });
          }
          ;
          wepy.navigateTo({
            url: pagePath.PAGE_INDEX_PUBLISH + "?type=" + type
          });
        }, function(err) {
          console.log(err);
        });
      },
      turnToUserInfo(user_id) {
        wepy.navigateTo({
          url: pagePath.PAGE_USER_INFO_LIST + '?user_id=' + user_id
        });
      }
    };

    events = {};

    onLoad() {
      this.requestData();
    }

    onShow() {

    }

    onReachBottom() {
      if (this.currentTab === 0) {
        this.page = this.page + 1;
        this.requestData();
      } else if (this.currentTab === 1) {
        this.userPage = this.userPage + 1;
        this.requestUser();
      }
      this.updateIcon = true;
      this.$apply();
    }

    onPullDownRefresh() {
      if (this.currentTab === 0) {
        this.page = 1;
        this.articleList = []
        this.$apply()
        this.requestData();
      } else if (this.currentTab === 1) {
        this.userPage = 1;
        this.userList = [];
        this.$apply();
        this.requestUser();
      }
      this.updateIcon = true;
      this.$apply();
    }

    requestData() {
      var params = {
        'page': this.page
      };
      var self = this;
      request.post(common.IP + urls.article_article_list, params, function(res) {
        if (res.ret == 1 && res.data.list.length != 0) {
          self.articleList = self.articleList.concat(res.data.list);
        } else {

        }
        self.updateIcon = false;
        self.$apply();
      }, function(err) {
        console.log(err);
      });
    }

    requestUser() {
      var params = {
        'page': this.userPage
      };
      var self = this;
      api.post(urls.user_near_list, params, function(res) {
        if (res.ret == 1 && res.data.length != 0) {
          self.userList = self.userList.concat(res.data);
        }
        self.updateIcon = false;
        self.$apply();
      }, function(err) {
        console.log(err);
      });
    }

  }
</script>
